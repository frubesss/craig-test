name: Deploy PR Preview

on:
  pull_request:
    types: [opened, synchronize, reopened]
    branches: [ main ]

permissions:
  contents: read
  pages: write
  id-token: write
  pull-requests: write

jobs:
  deploy-preview:
    runs-on: ubuntu-latest
    environment:
      name: github-pages
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Checkout gh-pages branch
      uses: actions/checkout@v4
      with:
        ref: gh-pages
        path: gh-pages
        
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build
      run: |
        # Set public URL for PR preview
        export PUBLIC_URL="/github-agent-test/pr-${{ github.event.number }}"
        npm run build
        
    - name: Prepare preview deployment
      run: |
        cd gh-pages
        # Create PR directory if it doesn't exist
        mkdir -p "pr-${{ github.event.number }}"
        # Copy built files to PR directory
        cp -r ../build/* "pr-${{ github.event.number }}/"
        
    - name: Deploy to GitHub Pages
      run: |
        cd gh-pages
        git config user.name "github-actions[bot]"
        git config user.email "github-actions[bot]@users.noreply.github.com"
        git add .
        git commit -m "Deploy PR #${{ github.event.number }} preview" || exit 0
        git push
        
    - name: Comment PR
      uses: actions/github-script@v7
      with:
        script: |
          const prNumber = context.issue.number;
          const url = `https://frubesss.github.io/github-agent-test/pr-${prNumber}/`;
          const { data: comments } = await github.rest.issues.listComments({
            owner: context.repo.owner,
            repo: context.repo.repo,
            issue_number: context.issue.number,
          });
          
          const botComment = comments.find(comment => 
            comment.user.type === 'Bot' && 
            comment.body.includes('Preview deployment')
          );
          
          const body = `## ðŸš€ Preview deployment
          
          Your changes have been deployed to a preview environment:
          
          **Preview URL:** ${url}
          
          This preview will be updated automatically when you push new changes to this PR.`;
          
          if (botComment) {
            await github.rest.issues.updateComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              comment_id: botComment.id,
              body: body
            });
          } else {
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: body
            });
          }